service: baseline-webpage

frameworkVersion: '>=2.0.0 <4.0.0'

plugins:
  - serverless-s3-sync
  - serverless-cloudfront-invalidate

custom:
  s3Sync:
    - bucketNameKey: S3Bucket
      localDir: build/
  cloudfrontInvalidate:
    - distributionIdKey: 'CDNDistributionId'
      items:
        - '/*'

provider:
  name: aws
  runtime: nodejs14.x
  deploymentMethod: direct
  deploymentPrefix: ${self:service}-${sls:stage}

resources:
  Description: ${self:service} ${opt:stage}
  Resources:
    Bucket:
      Type: AWS::S3::Bucket
      Properties:
        OwnershipControls:
          Rules:
            - ObjectOwnership: BucketOwnerPreferred
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
    # Add bucket policy for cloudfront access
    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: Bucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal:
                Service: cloudfront.amazonaws.com
              Action:
                - s3:GetObject
              Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref Bucket
                  - /*
              Condition:
                StringEquals:
                  AWS:SourceArn:
                    !Join [
                      '',
                      [
                        'arn:aws:cloudfront::',
                        !Ref AWS::AccountId,
                        ':distribution/',
                        !Ref WebsiteCloudFrontDistribution,
                      ],
                    ]
    # Cloudfront response policy to set no-cache headers
    CloudfrontResponsePolicy:
      Type: AWS::CloudFront::ResponseHeadersPolicy
      Properties:
        ResponseHeadersPolicyConfig:
          Name: ${self:service}-${opt:stage}-no-cache-headers
          CustomHeadersConfig:
            Items:
              - Header: 'Cache-Control'
                Override: true
                Value: 'no-cache'
    # OAC Role for the Cloudfront distribution to block direct S3 Access
    WebsiteCloudFrontDistributionOriginAccessControl:
      Type: AWS::CloudFront::OriginAccessControl
      Properties:
        OriginAccessControlConfig:
          Name: ${self:service}-${opt:stage}-cloudfront-oac
          OriginAccessControlOriginType: s3
          SigningBehavior: always
          SigningProtocol: sigv4
    # Cloudfront distribution
    WebsiteCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          HttpVersion: http2
          Origins:
            - DomainName: !GetAtt Bucket.RegionalDomainName
              Id: !GetAtt Bucket.RegionalDomainName
              OriginAccessControlId: !Ref WebsiteCloudFrontDistributionOriginAccessControl
              S3OriginConfig:
                OriginAccessIdentity: ''
          # Aliases:
          # - your-url.com
          DefaultRootObject: index.html # Serve index by default since it is a SPA
          CustomErrorResponses:
            - ErrorCode: 403
              ResponseCode: 200
              ResponsePagePath: /index.html # errors are handled by react router
          DefaultCacheBehavior:
            AllowedMethods:
              - GET
              - HEAD
            CachedMethods:
              - HEAD
              - GET
            Compress: true
            DefaultTTL: 1800
            MinTTL: 0
            TargetOriginId: !GetAtt Bucket.RegionalDomainName
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            ResponseHeadersPolicyId: !Ref CloudfrontResponsePolicy
          ViewerCertificate:
            CloudFrontDefaultCertificate: true

  Outputs:
    WebsiteUrl:
      Description: Cloudfront site URL
      Value: !Join
        - '://'
        - - 'https'
          - 'Fn::GetAtt': [WebsiteCloudFrontDistribution, DomainName]
    WebsiteCloudFrontDistribution:
      Description: Cloudfront site URL
      Value:
        'Fn::GetAtt': [WebsiteCloudFrontDistribution, DomainName]
    CDNDistributionId:
      Description: CDN distribution id.
      Value:
        Ref: WebsiteCloudFrontDistribution
    S3Bucket:
      Description: S3 Bucket
      Value:
        Ref: Bucket
